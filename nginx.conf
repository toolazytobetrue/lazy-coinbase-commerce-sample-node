geoip_country /usr/share/GeoIP/GeoIP.dat;
map $geoip_country_code $allowed_country {
  default yes;
  BH no;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name bert.com www.bert.com;
  # Use the Let's Encrypt certificates
  ssl_certificate /etc/letsencrypt/live/bert.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/bert.com/privkey.pem;

  # Include the SSL configuration from cipherli.st
  include snippets/ssl-params.conf;
  root /var/www/bert/dist/bert;
  index index.html;

  location / {
    try_files $uri $uri/ /index.html;
    if ($allowed_country = no) {
      return 403;
    }
  }

  location /api/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    if ($allowed_country = no) {
      return 403;
    }
  }

  # Requests for socket.io are passed on to Node on port 3001
  location ~* \.io {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy false;

    proxy_pass http://localhost:3001;
    proxy_redirect off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

